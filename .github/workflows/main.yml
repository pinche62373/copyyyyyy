name: üöÄ CI
env:
  UPSTREAM_REPOSITORY: "pinche62373/tzdb"
  MAIN_REPO_FOLDER: "main-repo"
  MAIN_REPO_PATH: /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/main-repo
  UPSTREAM_REPO_FOLDER: "upstream-repo"
  UPSTREAM_REPO_PATH: /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/upstream-repo
  LOG_LEVEL: ${{ github.runner_debug == 'true' && 'debug' || 'info' }} # set winston required LOG_LEVEL for CI debug mode

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  protect-upstream:
    name: üõ°Ô∏è Protect Upstream
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.MAIN_REPO_FOLDER }}    

    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.MAIN_REPO_FOLDER }}
          
      - name: Checkout upstream repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.UPSTREAM_REPOSITORY }}
          token: ${{ secrets.PAT_TOKEN }}          
          path: ${{ env.UPSTREAM_REPO_FOLDER }}
          
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./${{ env.MAIN_REPO_FOLDER }}/.nvmrc
          cache-dependency-path: ./${{ env.MAIN_REPO_FOLDER }}/package.json

      - name: Install dependencies
        run: npm install
          
      - name: Init and Protect
        run: |
          npx tsx .sync/init-upstream.ts
          npx tsx .sync/protect-upstream.ts

  lint-code:
    name: Biome
    needs: protect-upstream
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4

      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
          version: latest
    
      - name: Run Biome
        run: biome ci .

  # can be removed once Biome supports Markdown
  lint-markdown:
    name: Markdown
    needs: protect-upstream
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4

      - name: Run Markdownlint2
        uses: DavidAnson/markdownlint-cli2-action@v17
        with:
          config: '.markdownlint-cli2.jsonc'
          globs: '**/*.md'

  typecheck:
    name: TypeScript
    needs: protect-upstream    
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 20

      - name: Setup database
        uses: ./.github/actions/database

      - name: Run type check
        run: npm run typecheck --if-present

  vitest:
    name: Vitest
    needs: protect-upstream    
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.MAIN_REPO_FOLDER }}

    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.MAIN_REPO_FOLDER }}

      - name: Checkout upstream repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.UPSTREAM_REPOSITORY }}   
          token: ${{ secrets.PAT_TOKEN }}                 
          path: ${{ env.UPSTREAM_REPO_FOLDER }}

      - name: List folder content (in debug mode)
        if: ${{ runner.debug == '1' }}      
        shell: bash
        run: |
          ls -alR ${{ github.workspace }}

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version-file: ./${{ env.MAIN_REPO_FOLDER }}/.nvmrc
          cache-dependency-path: ./${{ env.MAIN_REPO_FOLDER }}/package.json

      - name: Install dependencies
        run: npm install

      - name: Run vitest
        run: npm run test -- --coverage
